<?xml version = '1.0' encoding = 'UTF-8'?>
<!--Generated by Oracle SOA Modeler version 12.1.3.0.0 at [6/3/18 4:45 PM].-->
<Mediator name="ValidateCreditCard" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" wsdlTargetNamespace="http://xmlns.oracle.com/POApplication/CreditCardValidation/ValidateCreditCard" xmlns="http://xmlns.oracle.com/sca/1.0/mediator"
          xmlns:inp1="http://www.example.org/ns/ccauthorize">
   <operation name="validateCC" deliveryPolicy="AllOrNothing" priority="4" validateSchema="false">
      <switch>
         <case executionType="sequential" name="CreditCardDBService.CreditCardDBServiceSelect">
            <condition language="xpath">
               <expression>starts-with($in.request/inp1:CreditCheckRequest/inp1:CCNumber,'9000')</expression>
            </condition>
            <action>
               <transform>
                  <part name="$out.CreditCardDBServiceSelect_inputParameters"
                        function="xslt(../Transformations/CreditCheckRequest_To_CreditCardDBServiceSelect_ccNumInputParameters1.xsl, $in.request)"/>
               </transform>
               <invoke reference="CreditCardDBService" operation="CreditCardDBServiceSelect">
                  <onReply>
                     <transform>
                        <part name="$out.response"
                              function="xslt(../Transformations/CreditcardsCollection_To_CreditCheckResponse.xsl, $in.CreditcardsCollection)"/>
                     </transform>
                     <reply/>
                  </onReply>
               </invoke>
            </action>
         </case>
         <case executionType="sequential" name="CreditCheckFault.creditcheckfault_client.validateCC">
            <condition language="xpath">
               <expression>not(starts-with($in.request/inp1:CreditCheckRequest/inp1:CCNumber,'9000'))</expression>
            </condition>
            <action>
               <transform>
                  <part name="$out.request"
                        function="xslt(../Transformations/CreditCheckRequest_To_CreditCheckRequest.xsl, $in.request)"/>
               </transform>
               <invoke reference="CreditCheckFault.creditcheckfault_client" operation="validateCC">
                  <onReply>
                     <transform>
                        <part name="$out.response"
                              function="xslt(../Transformations/CreditCheckResponse_To_CreditCheckResponse.xsl, $in.response)"/>
                     </transform>
                     <reply/>
                  </onReply>
                  <onFault type="validateCCfault">
                     <transform>
                        <part name="$out.fault"
                              function="xslt(../Transformations/CreditCheckFault_To_CreditCheckFault.xsl, $in.fault)"/>
                     </transform>
                     <fault type="validateCCfault"/>
                  </onFault>
               </invoke>
            </action>
         </case>
      </switch>
   </operation>
</Mediator>
